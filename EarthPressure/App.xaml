<Application x:Class="EarthPressure.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:EarthPressure"
             xmlns:math="clr-namespace:WpfMath.Controls;assembly=WpfMath"
             xmlns:converters="clr-namespace:EarthPressure.Converters"
             >
    <Application.Resources>
        <ResourceDictionary>

            <Style x:Key="TitleBarButtonStyle" TargetType="Button">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrush}}" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
					x:Name="border"
					Background="Transparent"
					BorderThickness="0"
					SnapsToDevicePixels="true">
                                <ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="Red" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="Blue" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
					x:Name="border"
					Background="Transparent"
					BorderThickness="0"
					SnapsToDevicePixels="true">
                                <ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="Red" />
                                    <Setter Property="Foreground" Value="Blue" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="Blue" />
                                    <Setter Property="Foreground" Value="Blue" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

  
            <SolidColorBrush x:Key="BorderPrimary" Color="#afafaf" />

            <Style x:Key="TextStyle" TargetType="TextBlock">
                <Setter Property="Margin" Value="5" />
                <Setter Property="Width" Value="50" />
                <Setter Property="FontSize" Value="15" />
            </Style>

            <Style TargetType="TextBox">
                <Setter Property="Margin" Value="5" />
                <Setter Property="Width" Value="100" />
                <Setter Property="FontSize" Value="15" />
            </Style>

            <Style x:Key="FormulaStyle" TargetType="math:FormulaControl">
                <Setter Property="Margin" Value="7" />
                <Setter Property="Width" Value="100" />
                <Setter Property="Scale" Value="20" />
                <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
                <Setter Property="TextOptions.TextHintingMode" Value="Fixed" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <Style x:Key="Unit" TargetType="math:FormulaControl">
                <Setter Property="Margin" Value="7" />
                <Setter Property="Width" Value="100" />
                <Setter Property="Scale" Value="15" />
                <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
                <Setter Property="TextOptions.TextHintingMode" Value="Fixed" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <Style x:Key="Calculation" TargetType="math:FormulaControl">
                <Setter Property="Margin" Value="7" />
                <Setter Property="Width" Value="300" />
                <Setter Property="Scale" Value="20" />
                <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
                <Setter Property="TextOptions.TextHintingMode" Value="Fixed" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <Style TargetType="Menu">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            </Style>

            <Style x:Key="WindowMainPanelStyle" TargetType="{x:Type Border}">
                <Setter Property="BorderBrush" Value="{StaticResource BorderPrimary}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="CornerRadius" Value="0" />
                <Setter Property="Background" Value="GhostWhite" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                        <Setter Property="BorderThickness" Value="0" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <converters:VisibleOnTrue x:Key="VisibleOnTrueConverter"/>
            <converters:VisibleOnFalse x:Key="VisibleOnFalseConverter"/>

        </ResourceDictionary>

    </Application.Resources>
</Application>
